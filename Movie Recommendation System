{"cells":[{"cell_type":"code","source":["import pandas as pd\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.metrics.pairwise import cosine_similarity\n","\n","# Sample data\n","data = {\n","    'movieId': [1, 2, 3, 4, 5],\n","    'title': [\n","        'Toy Story (1995)',\n","        'Jumanji (1995)',\n","        'Grumpier Old Men (1995)',\n","        'Waiting to Exhale (1995)',\n","        'Father of the Bride Part II (1995)'\n","    ],\n","    'genres': [\n","        'Adventure|Animation|Children|Comedy|Fantasy',\n","        'Adventure|Children|Fantasy',\n","        'Comedy|Romance',\n","        'Comedy|Drama|Romance',\n","        'Comedy'\n","    ]\n","}\n","\n","movies = pd.DataFrame(data)\n","\n","# Preprocess genres\n","movies['genres'] = movies['genres'].fillna('').str.replace('|', ' ', regex=False)\n","\n","# TF-IDF\n","tfidf = TfidfVectorizer(stop_words='english')\n","tfidf_matrix = tfidf.fit_transform(movies['genres'])\n","\n","# Cosine similarity\n","cosine_sim = cosine_similarity(tfidf_matrix, tfidf_matrix)\n","\n","# Index mapping\n","indices = pd.Series(movies.index, index=movies['title']).drop_duplicates()\n","\n","# Recommender\n","def recommend_movie(title, num_recommendations=3):\n","    if title not in indices:\n","        return [\"Movie not found.\"]\n","\n","    idx = indices[title]\n","    sim_scores = list(enumerate(cosine_sim[idx]))\n","    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n","    sim_scores = sim_scores[1:num_recommendations+1]\n","    movie_indices = [i[0] for i in sim_scores]\n","\n","    return movies['title'].iloc[movie_indices].tolist()\n","\n","# Try it\n","print(\"Recommendations for 'Toy Story (1995)':\")\n","for i, rec in enumerate(recommend_movie('Toy Story (1995)'), 1):\n","    print(f\"{i}. {rec}\")"],"metadata":{"id":"F7c3-_Y3wjs1","executionInfo":{"status":"ok","timestamp":1748701977237,"user_tz":-330,"elapsed":3107,"user":{"displayName":"","userId":""}},"outputId":"69cfe7c6-656b-46f6-b9ad-7de5f90533cf","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Recommendations for 'Toy Story (1995)':\n","1. Jumanji (1995)\n","2. Father of the Bride Part II (1995)\n","3. Grumpier Old Men (1995)\n"]}]},{"cell_type":"markdown","metadata":{"id":"VYV91hbKwP2J"},"source":["Colab notebooks execute code on Google's cloud servers, meaning you can leverage the power of Google hardware, including [GPUs and TPUs](#using-accelerated-hardware), regardless of the power of your machine. All you need is a browser.\n","\n","For example, if you find yourself waiting for **pandas** code to finish running and want to go faster, you can switch to a GPU Runtime and use libraries like [RAPIDS cuDF](https://rapids.ai/cudf-pandas) that provide zero-code-change acceleration."]},{"cell_type":"markdown","metadata":{"id":"vwnNlNIEwoZ8"},"source":["To learn more about accelerating pandas on Colab, see the [10 minute guide](https://colab.research.google.com/github/rapidsai-community/showcase/blob/main/getting_started_tutorials/cudf_pandas_colab_demo.ipynb) or\n"," [US stock market data analysis demo](https://colab.research.google.com/github/rapidsai-community/showcase/blob/main/getting_started_tutorials/cudf_pandas_stocks_demo.ipynb)."]},{"cell_type":"markdown","metadata":{"id":"OwuxHmxllTwN"},"source":["<div class=\"markdown-google-sans\">\n","\n","## Machine learning\n","</div>\n","\n","With Colab you can import an image dataset, train an image classifier on it, and evaluate the model, all in just [a few lines of code](https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/quickstart/beginner.ipynb)."]},{"cell_type":"markdown","metadata":{"id":"ufxBm1yRnruN"},"source":["Colab is used extensively in the machine learning community with applications including:\n","- Getting started with TensorFlow\n","- Developing and training neural networks\n","- Experimenting with TPUs\n","- Disseminating AI research\n","- Creating tutorials\n","\n","To see sample Colab notebooks that demonstrate machine learning applications, see the [machine learning examples](#machine-learning-examples) below."]},{"cell_type":"markdown","metadata":{"id":"-Rh3-Vt9Nev9"},"source":["<div class=\"markdown-google-sans\">\n","\n","## More Resources\n","\n","### Working with Notebooks in Colab\n","\n","</div>\n","\n","- [Overview of Colab](/notebooks/basic_features_overview.ipynb)\n","- [Guide to Markdown](/notebooks/markdown_guide.ipynb)\n","- [Importing libraries and installing dependencies](/notebooks/snippets/importing_libraries.ipynb)\n","- [Saving and loading notebooks in GitHub](https://colab.research.google.com/github/googlecolab/colabtools/blob/main/notebooks/colab-github-demo.ipynb)\n","- [Interactive forms](/notebooks/forms.ipynb)\n","- [Interactive widgets](/notebooks/widgets.ipynb)\n","\n","<div class=\"markdown-google-sans\">\n","\n","<a name=\"working-with-data\"></a>\n","### Working with Data\n","</div>\n","\n","- [Loading data: Drive, Sheets, and Google Cloud Storage](/notebooks/io.ipynb)\n","- [Charts: visualizing data](/notebooks/charts.ipynb)\n","- [Getting started with BigQuery](/notebooks/bigquery.ipynb)\n","\n","<div class=\"markdown-google-sans\">\n","\n","### Machine Learning\n","\n","<div>\n","\n","These are a few of the notebooks related to Machine Learning, including Google's online Machine Learning course. See the [full course website](https://developers.google.com/machine-learning/crash-course/) for more.\n","- [Intro to Pandas DataFrame](https://colab.research.google.com/github/google/eng-edu/blob/main/ml/cc/exercises/pandas_dataframe_ultraquick_tutorial.ipynb)\n","- [Intro to RAPIDS cuDF to accelerate pandas](https://nvda.ws/rapids-cudf)\n","- [Getting Started with cuML's accelerator mode](https://colab.research.google.com/github/rapidsai-community/showcase/blob/main/getting_started_tutorials/cuml_sklearn_colab_demo.ipynb)\n","- [Linear regression with tf.keras using synthetic data](https://colab.research.google.com/github/google/eng-edu/blob/main/ml/cc/exercises/linear_regression_with_synthetic_data.ipynb)\n","\n","<div class=\"markdown-google-sans\">\n","\n","<a name=\"using-accelerated-hardware\"></a>\n","### Using Accelerated Hardware\n","</div>\n","\n","- [TensorFlow with GPUs](/notebooks/gpu.ipynb)\n","- [TPUs in Colab](/notebooks/tpu.ipynb)"]},{"cell_type":"markdown","metadata":{"id":"P-H6Lw1vyNNd"},"source":["<div class=\"markdown-google-sans\">\n","\n","<a name=\"machine-learning-examples\"></a>\n","\n","### Featured examples\n","\n","</div>\n","\n","- [Retraining an Image Classifier](https://tensorflow.org/hub/tutorials/tf2_image_retraining): Build a Keras model on top of a pre-trained image classifier to distinguish flowers.\n","- [Text Classification](https://tensorflow.org/hub/tutorials/tf2_text_classification): Classify IMDB movie reviews as either *positive* or *negative*.\n","- [Style Transfer](https://tensorflow.org/hub/tutorials/tf2_arbitrary_image_stylization): Use deep learning to transfer style between images.\n","- [Multilingual Universal Sentence Encoder Q&A](https://tensorflow.org/hub/tutorials/retrieval_with_tf_hub_universal_encoder_qa): Use a machine learning model to answer questions from the SQuAD dataset.\n","- [Video Interpolation](https://tensorflow.org/hub/tutorials/tweening_conv3d): Predict what happened in a video between the first and the last frame.\n"]},{"cell_type":"code","source":[],"metadata":{"id":"7sFYN1NkwblS"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"name":"Welcome To Colab","toc_visible":true,"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1748702030244}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}